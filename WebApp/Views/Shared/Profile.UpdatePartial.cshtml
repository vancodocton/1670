@model WebApp.ViewModels.UserProfileViewModel
@using WebApp.Utils;
<div class="container-sm">
	@using (Html.BeginForm(null, null, FormMethod.Post))
	{
		@Html.AntiForgeryToken()
		@Html.HiddenFor(model => model.Id)

		<h4>@ViewBag.Title</h4>
		<hr />
		<div class="row justify-content-center">
			<div class="col-lg-4 col-md-5 mt-md-4 order-md-0 order-1">
				<div class="form-floating mb-3">
					@Html.EditorFor(model => model.User.UserName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
					@Html.LabelFor(model => model.User.UserName, htmlAttributes: new { @class = "col-form-label" })
				</div>
				<div class="form-floating mb-3">
					@Html.EditorFor(model => model.Roles, new { htmlAttributes = new { @class = "form-control", @value = string.Join(", ", Model.Roles), @readonly = "readonly" } })
					@Html.LabelFor(model => model.Roles, htmlAttributes: new { @class = "form-label" })
				</div>
				@Html.ValidationSummary(true, "", new { @class = "text-danger" })

				<div class="form-group">
					@Html.ActionLink("Ignore", "Index", null, new { @class = "btn btn-secondary" })
					<input type="submit" value="Update changes" class="btn btn-primary" />
				</div>
			</div>

			<div class="col-lg-4 col-md-5 order-md-1 order-0">
				<div class="form-group mb-3">
					@Html.LabelFor(model => model.FullName, htmlAttributes: new { @class = "form-label" })
					@Html.EditorFor(model => model.FullName, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })
				</div>
				<div class="form-group mb-3">
					@Html.LabelFor(model => model.Age, htmlAttributes: new { @class = "form-label" })
					@Html.EditorFor(model => model.Age, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.Age, "", new { @class = "text-danger" })
				</div>
				<div class="form-group mb-3">
					@Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "form-label" })
					@Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
				</div>
				<div class="form-group mb-3">
					@Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "form-label" })
					@Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
				</div>

				@if (Model.Roles.Any(r => r == Role.Trainer))
				{
					<div class="form-group mb-3">
						@Html.LabelFor(model => model.Specialty, htmlAttributes: new { @class = "form-label" })
						@Html.EditorFor(model => model.Specialty, new { htmlAttributes = new { @class = "form-control" } })
						@Html.ValidationMessageFor(model => model.Specialty, "", new { @class = "text-danger" })
					</div>
				}
				@if (Model.Roles.Any(r => r == Role.Trainee))
				{
					<div class="form-group mb-3">
						@Html.LabelFor(model => model.BirthDate, htmlAttributes: new { @class = "form-label" })
						@Html.EditorFor(model => model.BirthDate, new { htmlAttributes = new { @class = "form-control" } })
						@Html.ValidationMessageFor(model => model.BirthDate, "", new { @class = "text-danger" })
					</div>

					<div class="form-group mb-3">
						@Html.LabelFor(model => model.Education, htmlAttributes: new { @class = "form-label" })
						@Html.EditorFor(model => model.Education, new { htmlAttributes = new { @class = "form-control" } })
						@Html.ValidationMessageFor(model => model.Education, "", new { @class = "text-danger" })
					</div>
				}
			</div>
		</div>
	}

</div>

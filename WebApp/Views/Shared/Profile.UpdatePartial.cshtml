@model WebApp.ViewModels.UserProfileViewModel
@using WebApp.Utils;
<div class="col-6-auto">
	@using (Html.BeginForm(null, null, FormMethod.Post, new { @class = "justify-content-center" }))
	{
		@Html.AntiForgeryToken()
		@Html.HiddenFor(model => model.Id)

		<h4>@ViewBag.Title</h4>
		<hr />
		@Html.ValidationSummary(false, "", new { @class = "text-danger" })

		<div class="form-group mb-3">
			@Html.LabelFor(model => model.User.UserName, htmlAttributes: new { @class = "col-form-label" })
			@Html.EditorFor(model => model.User.UserName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
		</div>

		<div class="form-group mb-3">
			@Html.LabelFor(model => model.FullName, htmlAttributes: new { @class = "form-label" })
			@Html.EditorFor(model => model.FullName, new { htmlAttributes = new { @class = "form-control" } })
			@Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })
		</div>

		<div class="form-group mb-3">
			@Html.LabelFor(model => model.Age, htmlAttributes: new { @class = "form-label" })
			@Html.EditorFor(model => model.Age, new { htmlAttributes = new { @class = "form-control" } })
			@Html.ValidationMessageFor(model => model.Age, "", new { @class = "text-danger" })
		</div>

		<div class="form-group mb-3">
			@Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "form-label" })
			@Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
			@Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
		</div>

		<div class="form-group mb-3">
			@Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "form-label" })
			@Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
			@Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
		</div>

		<div class="form-group mb-3">
			@Html.LabelFor(model => model.Roles, htmlAttributes: new { @class = "form-label" })
			@Html.EditorFor(model => model.Roles, new { htmlAttributes = new { @class = "form-control", @value = string.Join(", ", Model.Roles), @readonly = "readonly" } })
			@Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
		</div>

		if (Model.Roles.Any(r => r == Role.Trainer))
		{
			<div class="form-group mb-3">
				@Html.LabelFor(model => model.Specialty, htmlAttributes: new { @class = "form-label" })
				@Html.EditorFor(model => model.Specialty, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.Specialty, "", new { @class = "text-danger" })
			</div>
		}

		if (Model.Roles.Any(r => r == Role.Trainee))
		{
			<div class="form-group mb-3">
				@Html.LabelFor(model => model.BirthDate, htmlAttributes: new { @class = "form-label" })
				@Html.EditorFor(model => model.BirthDate, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.BirthDate, "", new { @class = "text-danger" })
			</div>

			<div class="form-group mb-3">
				@Html.LabelFor(model => model.Education, htmlAttributes: new { @class = "form-label" })
				@Html.EditorFor(model => model.Education, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.Education, "", new { @class = "text-danger" })
			</div>
		}

		<div class="form-group mb-3">
			<input type="submit" value="Save changes" class="btn btn-primary" />
		</div>
	}

</div>

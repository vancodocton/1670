@model WebApp.ViewModels.CourseAssignViewModel
@using WebApp.Utils
@{
	ViewBag.Title = "Assign";
}
<h4>Assign a @Model.Role to course</h4>

@if (Model.Users.Count() == 0)
{
	<p class="text-danger">There is no @Model.Role else for assign to the course</p>
}
else
{
	using (Html.BeginForm())
	{
		@Html.AntiForgeryToken()
		<div class="form">
			<hr />
			@Html.HiddenFor(model => model.CourseId)
			@Html.HiddenFor(model => model.Role)

			<div class="form-group mb-3">
				<label class="col-md-2 control-label">@Model.Role</label>
				<div class="col-md-10">
					@Html.DropDownListFor(m => m.UserId, Model.Users, "", new { @class = "form-select" })
					@Html.ValidationMessageFor(m => m.UserId, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group mb-3">
				@Html.ValidationSummary(true, "", new { @class = "text-danger" })
				<input type="submit" value="Save changes" class="btn btn-primary" />
				@Html.ActionLink("Ignore", "Index", new { courseId = Model.CourseId }, new { @class = "btn btn-secondary" })
			</div>
		</div>
	}
}

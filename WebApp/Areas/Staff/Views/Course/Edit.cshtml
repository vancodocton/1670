@model WebApp.ViewModels.CreateCourseViewModel

@{
	ViewBag.Title = "Edit course";
}
@using (Html.BeginForm())
{
	@Html.AntiForgeryToken()
	@Html.ValidationSummary(true, "", new { @class = "text-danger" })
	@Html.HiddenFor(model => model.Course.Id)
	<h4>Edit Course</h4>
	<hr />

	<div class="form-group mb-3">
		@Html.LabelFor(model => model.Course.Name, htmlAttributes: new { @class = "form-label" })
		@Html.EditorFor(model => model.Course.Name, new { htmlAttributes = new { @class = "form-control" } })
		@Html.ValidationMessageFor(model => model.Course.Name, "", new { @class = "text-danger" })
	</div>

	<div class="form-group mb-3">
		@Html.LabelFor(model => model.Course.CourseCategory, htmlAttributes: new { @class = "form-label" })
		@Html.DropDownListFor(m => m.Course.CourseCategoryId, Model.Categories, "", htmlAttributes: new { @class = "form-select" })
		@Html.ValidationMessageFor(model => model.Course.CourseCategoryId, "", new { @class = "text-danger" })
	</div>

	<div class="form-group mb-3">
		@Html.LabelFor(model => model.Course.Description, htmlAttributes: new { @class = "form-label" })
		@Html.EditorFor(model => model.Course.Description, new { htmlAttributes = new { @class = "form-control" } })
		@Html.ValidationMessageFor(model => model.Course.Description, "", new { @class = "text-danger" })
	</div>

	<div class="form-group mb-3">
		@Html.ActionLink("Ignore", "Index", null, new { @class = "btn btn-secondary mx-2" })
		<input type="submit" value="Confirm Change" class="btn btn-primary" />
	</div>
}

@section scripts{
	@Scripts.Render("~/bundles/jqueryval")
}
@model IPagedList<WebApp.Models.Course>
@using X.PagedList
@using X.PagedList.Mvc.Fluent
@{
	ViewBag.Title = "Course management";
}

<h3>@ViewBag.Title</h3>
@Html.ActionLink("Create New", "Create", null, htmlAttributes: new { @class = "btn btn-primary" })

@using (Html.BeginForm("Index", "Course", FormMethod.Get))
{
	<div class="form-group my-3">
		<input id="keyword" name="keyword" type="text" placeholder="Course name" required value="@Request.Params["keyword"]" />
		<input id="submit" type="submit" class="btn btn-primary" value="Search" />
		@if (Request.Params["keyword"] != null)
		{
			@Html.ActionLink("Delete search result", "Index", null, htmlAttributes: new { @class = "btn btn-danger mx-3" })
		}

	</div>
}


<table class="table">
	<thead>
		<tr>
			<th scope="col">#</th>
			<th>
				@Html.DisplayNameFor(m => m.First().Name)
			</th>
			<th scope="col">
				@Html.DisplayNameFor(m => m.First().CourseCategory)
			</th>
			<th scope="col">
				@Html.DisplayNameFor(m => m.First().Description)
			</th>
			<th>
				Actions
			</th>
		</tr>
	</thead>

	<tbody>
		@{ int i = 0;}
		@foreach (var item in Model)
		{
			<tr>
				<th scope="row">@{i++;}@i</th>
				<td>
					@Html.DisplayFor(modelItem => item.Name)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.CourseCategory.Name)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.Description)
				</td>
				<td>
					@Html.ActionLink("Assign to", "Index", "Assign", new { id = item.Id }, htmlAttributes: new { @class = "btn btn-primary" }) |
					@Html.ActionLink("Edit", "Edit", new { id = item.Id }, htmlAttributes: new { @class = "btn btn-success" }) |
					@Html.ActionLink("Details", "Details", new { id = item.Id }, htmlAttributes: new { @class = "btn btn-info" }) |
					@Html.ActionLink("Delete", "Delete", new { id = item.Id }, htmlAttributes: new { @class = "btn btn-danger" })
				</td>
			</tr>
		}
	</tbody>
</table>
<br />

@(Html.Pager(Model)
		.Url(page => Url.Action("Index"))
		.Build())

@model IPagedList<WebApp.Models.Course>
@using X.PagedList
@using X.PagedList.Mvc
@using X.PagedList.Mvc.Fluent
@using X.PagedList.Web.Common

@{
	ViewBag.Title = "Course management";
}

<h2>@Html.ActionLink((string)ViewBag.Title, "Index", "Course")</h2>
@using (Html.BeginForm("Index", "Course", FormMethod.Get))
{
	<div class="form-group">
		<div class="col-md-10">
			@Html.Editor("CourseName", new { htmlAttributes = new { @class = "form-control", @placeholder = "Search for course" } })
		</div>
	</div>

	<div class="form-group">
		<div class="col-md-offset-2 col-md-10">
			<input type="submit" value="Search" class="btn btn-default" />
		</div>
	</div>
}

@Html.ActionLink("Create New", "Create", null, htmlAttributes: new { @class = "btn btn-primary" })

<table class="table">
	<thead>
		<tr>
			<th scope="col">#</th>
			<th>
				@Html.DisplayNameFor(m => m.First().Name)
			</th>
			<th scope="col">
				@Html.DisplayNameFor(m => m.First().CourseCategory)
			</th>
			<th scope="col">
				@Html.DisplayNameFor(m => m.First().Description)
			</th>
			<th>
				Actions
			</th>
		</tr>
	</thead>

	<tbody>
		@{ int i = 0;}
		@foreach (var item in Model)
		{
			<tr>
				<th scope="row">@{i++;}@i</th>
				<td>
					@Html.DisplayFor(modelItem => item.Name)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.CourseCategory.Name)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.Description)
				</td>
				<td>
					@Html.ActionLink("Assign to", "Assign", new { id = item.Id }, htmlAttributes: new { @class = "btn btn-primary" }) |
					@Html.ActionLink("Edit", "Edit", new { id = item.Id }, htmlAttributes: new { @class = "btn btn-success" }) |
					@Html.ActionLink("Details", "Details", new { id = item.Id }, htmlAttributes: new { @class = "btn btn-info" }) |
					@Html.ActionLink("Delete", "Delete", new { id = item.Id }, htmlAttributes: new { @class = "btn btn-danger" })
				</td>
			</tr>
		}
	</tbody>
</table>
<br />

@(Html.Pager(Model)
		.Url(page => Url.Action("Index", new { name = Request.Params["name"], age = Request.Params["age"], page = page }))
		.Build())
